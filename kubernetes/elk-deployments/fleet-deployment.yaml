apiVersion: apps/v1
kind: Deployment
metadata:
  name: fleet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fleet
  template:
    metadata:
      labels:
        app: fleet
    spec:
      initContainers:
        - name: wait-for-kibana
          image: busybox
          command:
            - sh
            - -c
            - |
              mkdir -p /elastic-agent-8.14.1-linux-x86_64/certs
              mkdir -p /elastic-agent-8.14.1-linux-x86_64/esdata
              wget https://github.com/moparisthebest/static-curl/releases/download/v7.85.0/curl-amd64
              mv curl-amd64 /bin/curl
              chmod +x /bin/curl
              wget -O jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
              chmod +x jq
              mv jq /bin/jq
              until [ "$(curl -s -k --user elastic:Aloulou556 http://kibana:5601/api/status | jq -r '.status.overall.level')" = "available" ]; do
                  echo "Waiting for Kibana to be available..."
                  sleep 10
              done
          env:
            - name: ELASTIC_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: elk-config
                  key: ELASTIC_PASSWORD
      containers:
        - name: fleet
          image: alazarrouk/fleet:latest
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          ports:
            - containerPort: 8220
          command: ["/bin/sh"]
          args:
            - -c
            - |
              curl -L -o jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
              chmod +x jq
              mv jq /bin/jq
              SERVICE_TOKEN=$(curl -X POST --cacert certs/ca/ca.crt --user elastic:Aloulou556 "https://es01:9200/_security/service/elastic/fleet-server/credential/token?pretty" | jq -r '.token.value')
              echo $SERVICE_TOKEN
              curl --cacert certs/ca/ca.crt -H "Authorization: Bearer $SERVICE_TOKEN" https://es01:9200/_security/_authenticate
              sudo cp  /elastic-agent-8.14.1-linux-x86_64/certs/ca/ca.crt /usr/local/share/ca-certificates/
              sudo cp  /elastic-agent-8.14.1-linux-x86_64/certs/es01/es01.crt /usr/local/share/ca-certificates/
              sudo cp  /elastic-agent-8.14.1-linux-x86_64/certs/fleet/fleet.crt /usr/local/share/ca-certificates/
              sudo cp  /elastic-agent-8.14.1-linux-x86_64/certs/fleet/fleet.crt /usr/local/share/ca-certificates/
              sudo update-ca-certificates
              echo 'y' | ./elastic-agent install \
              --url=https://fleet:8220 \
              --fleet-server-es=https://es01:9200 \
              --fleet-server-service-token=$SERVICE_TOKEN \
              --fleet-server-policy=fleet-server-policy \
              --certificate-authorities=/elastic-agent-8.14.1-linux-x86_64/certs/ca/ca.crt \
              --fleet-server-es-ca=/elastic-agent-8.14.1-linux-x86_64/certs/es01/es01.crt \
              --fleet-server-cert=/elastic-agent-8.14.1-linux-x86_64/certs/fleet/fleet.crt \
              --fleet-server-cert-key=/elastic-agent-8.14.1-linux-x86_64/certs/fleet/fleet.key \
              --fleet-server-port=8220
              while true; do sleep 30; done;

          resources:
            requests:
              memory: 1.5Gi
              cpu: 700m
            limits:
              memory: 2.5Gi
              cpu: 800m

          volumeMounts:
            - mountPath: /elastic-agent-8.14.1-linux-x86_64/certs
              name: certs
      volumes:
        - name: certs
          nfs:
            server: 10.53.2.115
            path: /mnt/data/certs

        - name: fleetdata
          persistentVolumeClaim:
            claimName: fleetdata-pvc
        

---
apiVersion: v1
kind: Service
metadata:
  name: fleet
spec:
  type: NodePort
  ports:
    - port: 8220         # Port on the service
      targetPort: 8220   # Port on the pod
      nodePort: 30002    # Port on the node (choose within the range 30000-32767)
  selector:
    app: fleet 