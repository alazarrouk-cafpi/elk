---
- name: Setup master virtual machine
  hosts: localhost
  become: yes
  vars_files:
    - /home/admala/vault.yml
  tasks:
    - name: Setting up dependencies
      shell: |
        apt-get update -y
        apt install curl net-tools wget unzip openjdk-17-jdk -y

    - name: installing kubernetes
      shell: |
        snap install microk8s --classic
        usermod -a -G microk8s admala
        newgrp microk8s
        usermod -a -G microk8s admala
        mkdir -p ~/.kube
        chmod 0700 ~/.kube
        chown -R admala ~/.kube
        microk8s status --wait-ready
        microk8s enable dns
        microk8s enable storage
        modprobe nf_conntrack
        echo "net.netfilter.nf_conntrack_max=131072" | sudo tee -a /etc/sysctl.conf
        sysctl -p
        systemctl restart snap.microk8s.daemon-kubelite 
      ignore_errors: yes

    - name: Creating mount folders
      shell: |
        mkdir -p /mnt/data/certs
        mkdir -p /mnt/data/elastalert-config/config
        mkdir -p /mnt/data/elastalert-config/custom_modules
        mkdir -p /mnt/data/elastalert-config/rules
        mkdir -p /mnt/data/elastalert-data
        mkdir -p /mnt/data/es-data
        mkdir -p /mnt/data/filebeatlogs-data
        mkdir -p /mnt/data/filebeatmetrics-data
        mkdir -p /mnt/data/fleet-data
        mkdir -p /mnt/data/kibana-data
        mkdir -p /mnt/data/logstash-data
        chmod 777 /mnt/data/certs
        chmod 777 /mnt/data/elastalert-config/
        chmod 777 /mnt/data/elastalert-data
        chmod 777 /mnt/data/es-data
        chmod 777 /mnt/data/filebeatlogs-data
        chmod 777 /mnt/data/filebeatmetrics-data
        chmod 777 /mnt/data/fleet-data
        chmod 777 /mnt/data/kibana-data
        chmod 777 /mnt/data/logstash-data

    - name: Configure NFS
      shell: |
        apt-get update
        apt-get install nfs-kernel-server -y
        apt-get enable nfs-kernel-server -y
        cat <<EOF > /etc/exports
        /mnt/data/certs 10.53.2.0/24(rw,sync,no_root_squash,no_subtree_check)
        /mnt/data/fleet-data 10.53.2.0/24(rw,sync,no_root_squash,no_subtree_check)
        /mnt/data/logstash-data 10.53.2.0/24(rw,sync,no_root_squash,no_subtree_check)
        /mnt/data/kibana-data 10.53.2.0/24(rw,sync,no_root_squash,no_subtree_check)
        /mnt/data/es-data 10.53.2.0/24(rw,sync,no_root_squash,no_subtree_check)
        /mnt/data/elastalert-data 10.53.2.0/24(rw,sync,no_root_squash,no_subtree_check)
        /mnt/data/elastalert-config/config 10.53.2.0/24(rw,sync,no_root_squash,no_subtree_check)
        /mnt/data/elastalert-config/rules 10.53.2.0/24(rw,sync,no_root_squash,no_subtree_check)
        /mnt/data/elastalert-config/custom_modules 10.53.2.0/24(rw,sync,no_root_squash,no_subtree_check)
        /mnt/data/filebeatlogs-data 10.53.2.0/24(rw,sync,no_root_squash,no_subtree_check)
        /mnt/data/filebeatmetrics-data 10.53.2.0/24(rw,sync,no_root_squash,no_subtree_check)
        EOF
        exportfs -a
        systemctl restart nfs-kernel-server

    - name: Configure elk container registry secret 
      shell: |
        microk8s kubectl create secret docker-registry elkimages-secret \
            --namespace default \
            --docker-server=elkimages.azurecr.io \
            --docker-username=df802705-25ee-4250-9860-0c01612bb0cd \
            --docker-password=sQj8Q~vEyiZAsr4xk3b8RNHBA8MJvLkFXFaj~a7Q

    - name: Copying elastalert configuration files to mounted folders
      shell: |
        cp -r elk-main/elastalert/config/* /mnt/data/elastalert-config/config/
        cp -r elk-main/elastalert/rules/* /mnt/data/elastalert-config/rules/
        cp -r elk-main/elastalert/custom_modules/* /mnt/data/elastalert-config/custom_modules/

    - name: Apply config maps
      shell: |
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/configMaps/env-configMap.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/configMaps/filebeat-logs-configMap.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/configMaps/filebeat-metrics-configMap.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/configMaps/logstash-configMap.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/configMaps/kibana-configMap.yaml
    
    - name: Apply persistent volumes
      shell: |
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes/certs-pv.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes/elastalert2-config-pv.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes/elastalert2-modules-pv.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes/elastalert2-pv.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes/elastalert2-rules-pv.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes/elasticsearch-pv.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes/filebeat-logs-pv.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes/filebeat-metrics-pv.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes/fleet-pv.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes/kibana-pv.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes/logstash-pv.yaml
    
    - name: Apply Persistent Volume Claims
      shell: |
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes-claims/certs-pvc.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes-claims/elastalert2-config-pvc.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes-claims/elastalert2-modules-pvc.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes-claims/elastalert2-rules-pvc.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes-claims/elastalert2-pvc.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes-claims/elasticsearch-pvc.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes-claims/filebeat-logs-pvc.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes-claims/filebeat-metrics-pvc.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes-claims/fleet-pvc.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes-claims/kibana-pvc.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/persistent-volumes-claims/logstash-pvc.yaml
    
    - name: Restart Kubernetes deployments
      shell: |
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/elk-deployments/elk-setup-deployment.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/elk-deployments/elasticsearch-deployment.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/elk-deployments/logstash-deployment.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/elk-deployments/kibana-deployment.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/elk-deployments/fleet-deployment.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/elk-deployments/filebeat-logs-deployment.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/elk-deployments/filebeat-metrics-deployment.yaml
        microk8s kubectl apply -f /home/admala/elk-main/kubernetes/elk-deployments/elastalert2-deployment.yaml

    - name: Remove sensitive files
      shell: |
        rm -rf /home/admala/elk*
      ignore_errors: yes